openapi: 3.0.0
info:
  title: eCommerce API
  version: 1.0.0
  description: Documentaci√≥n de la API para el proyecto eCommerce

servers:
  - url: http://localhost:8080
    description: Servidor local

paths:
  /api/products:
    get:
      summary: Obtener todos los productos
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Crear un nuevo producto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Producto creado correctamente
  /api/products/{pid}:
    get:
      summary: Obtener un producto por su ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
    put:
      summary: Actualizar un producto por su ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Producto actualizado correctamente
        '404':
          description: Producto no encontrado
    delete:
      summary: Eliminar un producto por su ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto eliminado correctamente
        '404':
          description: Producto no encontrado

  /api/carts:
    post:
      summary: Agregar producto al carrito
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: integer
      responses:
        '200':
          description: Producto agregado al carrito
        '500':
          description: Error al agregar producto al carrito
  /api/carts/{cid}:
    get:
      summary: Obtener carrito por ID
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Carrito encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '500':
          description: Error al obtener carrito
    post:
      summary: Finalizar compra y generar ticket
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Compra finalizada y ticket generado
        '404':
          description: Carrito no encontrado
        '500':
          description: Error procesando la compra

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
        stock:
          type: integer
        status:
          type: boolean
        thumbnails:
          type: array
          items:
            type: string
    Cart:
      type: object
      properties:
        id:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              product:
                $ref: '#/components/schemas/Product'
              quantity:
                type: integer
    Ticket:
      type: object
      properties:
        code:
          type: string
        purchase_datetime:
          type: string
          format: date-time
        amount:
          type: number
        purchaser:
          type: string




